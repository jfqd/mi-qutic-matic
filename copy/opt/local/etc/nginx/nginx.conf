user   www  www;
worker_processes 1;
worker_rlimit_nofile 20480;

events {
    worker_connections  10240;
}

http {
    include       /opt/local/etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $upstream_response_time';

    access_log  /var/log/nginx/access.log  main;

    server_tokens off;

    proxy_connect_timeout 3600;
    proxy_send_timeout    3600;
    proxy_read_timeout    3600;
    send_timeout          3600;
    client_header_timeout 3600;
    client_body_timeout   3600;
    fastcgi_read_timeout  3600;

    upstream php-handler {
        server unix:/var/tmp/php.sock;
    }

    server {
        listen 127.0.0.1:80;
        server_name localhost;
        location /nginx_status {
            stub_status on;
            access_log  off;
            allow 127.0.0.1;
            deny all;
        }
       location ~ ^/fpm_(status|ping)$ {
         access_log off;
         allow 127.0.0.1;
         deny all;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         fastcgi_index index.php;
         include fastcgi_params;
         fastcgi_pass php-handler;
       }
    }

    server {
        listen 80;
        listen [::]:80;

        # Enforce HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443      ssl http2;
        listen [::]:443 ssl http2;

        # Use Mozilla's guidelines for SSL/TLS settings
        # https://mozilla.github.io/server-side-tls/ssl-config-generator/
        ssl_certificate     /opt/local/etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /opt/local/etc/nginx/ssl/nginx.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA';
        ssl_prefer_server_ciphers on;

        # HSTS settings
        # WARNING: Only add the preload option once you read about
        # the consequences in https://hstspreload.org/. This option
        # will add the domain to a hardcoded list that is shipped
        # in all major browsers and getting removed from this list
        # could take several months.
        #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;

        # set max upload size
        client_max_body_size 64M;
        fastcgi_buffers 64 4K;

        # Enable gzip but do not remove ETag headers
        gzip on;
        gzip_vary on;
        gzip_disable "msie6";
        gzip_comp_level 6;
        gzip_min_length 256;
        gzip_proxied any;
      	gzip_http_version 1.1;
        gzip_types font/truetype
                   font/opentype
                   font/woff2
                   text/plain
                   text/css
                   text/js
                   text/xml
                   text/javascript
                   application/javascript
                   application/x-javascript
                   application/json
                   application/xml
                   application/rss+xml
                   image/svg+xml;
        
        # HTTP response headers
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        # Remove X-Powered-By, which is an information leak
        fastcgi_hide_header X-Powered-By;

        # Path to the root of your installation
        root /var/www/htdocs/mautic/current;

        location ~ \.php$ {
            try_files $uri =404;
            include                  fastcgi_params;
            fastcgi_split_path_info  ^(.+\.php)(/.+)$;
            fastcgi_index            index.php;
            fastcgi_pass             php-handler;
            fastcgi_param            SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param            HTTPS on;
        }
        
        # redirect index.php to root
        rewrite ^/index.php/(.*) /$1  permanent;
        
        error_page 404 /index.php;
        
        # redirect some entire folders
        rewrite ^/(vendor|translations|build)/.* /index.php break;

        location / {
            try_files $uri /index.php$is_args$args;
        }
        

        # Deny everything else in /app folder except Assets folder in bundles
        location ~ /app/bundles/.*/Assets/ {
            allow all;
            access_log off;
        }
        location ~ /app/assets/images/ {
            allow all;
            access_log off;
        }

        location ~ /app/ { deny all; }

        # Deny everything else in /addons or /plugins folder except Assets folder in bundles
        location ~ /(addons|plugins)/.*/Assets/ {
        		allow all;
        		access_log off;
        }
    
        # location ~ /(addons|plugins)/ { deny all; }

        # Deny all php files in themes folder
      	location ~* ^/themes/(.*)\.php {
        		deny all;
      	}

        # Don't log favicon
      	location = /favicon.ico {
        		log_not_found off;
        		access_log off;
      	}

        # Don't log robots
      	location = /robots.txt  {
        		access_log off;
        		log_not_found off;
      	}

        # Deny yml, twig, markdown, init file access
      	location ~* /(.*)\.(?:markdown|md|twig|yaml|yml|ht|htaccess|ini)$ {
        		deny all;
        		access_log off;
        		log_not_found off;
        }

        # Deny all attempts to access hidden files/folders such as .htaccess, .htpasswd, .DS_Store (Mac), etc...
      	location ~ /\. {
        		deny all;
        		access_log off;
        		log_not_found off;
      	}

        # Deny all grunt, composer files
      	location ~* (Gruntfile|package|composer)\.(js|json)$ {
        		deny all;
        		access_log off;
        		log_not_found off;
      	}

      	location ~*  \.(jpg|jpeg|png|ico|pdf)$ {
        		expires 15d;
      	}

        # Deny access to any files with a .php extension in the uploads directory
      	location ~* /(?:uploads|files)/.*\.php$ {
        		deny all;
      	}

        # Solve email tracking pixel not found
      	location ~ email/(.*).gif {
        		try_files $uri /index.php?$args;
      	}

        # Solve JS Loading 404 Error
      	location ~ (.*).js {
        		try_files $uri /index.php?$args;
      	}
            
    }
    
    # include /opt/local/etc/nginx/sites-enabled/*.conf;
}